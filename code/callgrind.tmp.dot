digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="libc-2.27.so\n(below main)\n99.90%\n(0.00%)\n1×"];
	"(below main)" -> main [arrowsize="1.00", color="#ff0100", fontcolor="#ff0100", fontsize="10.00", label="99.88%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000001090" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-2.27.so\n0x0000000000001090\n99.99%\n(0.00%)\n0×"];
	"0x0000000000001090" -> "_start" [arrowsize="1.00", color="#ff0100", fontcolor="#ff0100", fontsize="10.00", label="99.90%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000018900" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000018900\n1.04%\n(0.00%)\n1804×"];
	"0x0000000000018900" -> "0x0000000000038a10" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.99%\n1804×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000019470" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000019470\n0.85%\n(0.00%)\n8×"];
	"0x0000000000019470" -> "0x0000000000025800" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.85%\n8×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000025800" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000025800\n0.92%\n(0.00%)\n2564×"];
	"0x0000000000025800" -> "0x00000000000310a0" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000030470" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000030470\n0.78%\n(0.00%)\n1×"];
	"0x0000000000030470" -> cuDevicePrimaryCtxRetain [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000030600" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000030600\n0.78%\n(0.00%)\n1×"];
	"0x0000000000030600" -> "0x0000000000030470" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000000310a0" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x00000000000310a0\n0.78%\n(0.00%)\n1×"];
	"0x00000000000310a0" -> "0x0000000000030600" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000038a10" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\n0x0000000000038a10\n0.99%\n(0.00%)\n1804×"];
	"0x0000000000038a10" -> "cuMemcpyHtoD_v2" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.94%\n1746×", labeldistance="0.50", penwidth="0.50"];
	"0x000000000010e750" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x000000000010e750\n0.78%\n(0.00%)\n1×"];
	"0x000000000010e750" -> "0x00000000001e6d40" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000119880" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x0000000000119880\n0.84%\n(0.02%)\n1804×"];
	"0x0000000000119880" -> "0x0000000000218ca0" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.67%\n1804×", labeldistance="0.50", penwidth="0.50"];
	"0x000000000011b550" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x000000000011b550\n0.94%\n(0.01%)\n1746×"];
	"0x000000000011b550" -> "0x0000000000119880" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.80%\n1746×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000001e5010" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x00000000001e5010\n0.78%\n(0.00%)\n1×"];
	"0x00000000001e6d40" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x00000000001e6d40\n0.78%\n(0.00%)\n1×"];
	"0x00000000001e6d40" -> "0x00000000001e5010" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000218ca0" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x0000000000218ca0\n0.67%\n(0.01%)\n1804×"];
	"0x0000000000218ca0" -> "0x00000000002194b0" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.52%\n1746×", labeldistance="0.50", penwidth="0.50"];
	"0x00000000002194b0" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x00000000002194b0\n0.54%\n(0.01%)\n1807×"];
	"0x0000000000220290" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\n0x0000000000220290\n0.53%\n(0.00%)\n14×"];
	"CuGraph::CuGraph(Graph const&, mgpu::context_t&)" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nCuGraph::CuGraph(Graph const&, mgpu::context_t&)\n0.90%\n(0.00%)\n58×"];
	"CuGraph::CuGraph(Graph const&, mgpu::context_t&)" -> cudaMemcpy [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.77%\n1346×", labeldistance="0.50", penwidth="0.50"];
	"Graph::getNextNeighbour(int, int) const" [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nGraph::getNextNeighbour(int, int) const\n4.09%\n(4.09%)\n2906112×"];
	"_start" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\n_start\n99.90%\n(0.00%)\n1×"];
	"_start" -> "(below main)" [arrowsize="1.00", color="#ff0100", fontcolor="#ff0100", fontsize="10.00", label="99.90%\n1×", labeldistance="4.00", penwidth="4.00"];
	"cuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]" [color="#fd0d00", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\ncuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]\n98.73%\n(0.02%)\n58×"];
	"cuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]" -> "CuGraph::CuGraph(Graph const&, mgpu::context_t&)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.90%\n58×", labeldistance="0.50", penwidth="0.50"];
	"cuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]" -> cudaMemcpy [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.27%\n458×", labeldistance="0.50", penwidth="0.50"];
	"cuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]" -> "nextPathInPlace(Graph const&, vec<int>&, int, bool, bool)" [arrowsize="0.99", color="#fb1c01", fontcolor="#fb1c01", fontsize="10.00", label="97.23%\n5626×", labeldistance="3.89", penwidth="3.89"];
	cuDevicePrimaryCtxRetain [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\ncuDevicePrimaryCtxRetain\n0.78%\n(0.00%)\n1×"];
	cuDevicePrimaryCtxRetain -> "0x000000000010e750" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.78%\n1×", labeldistance="0.50", penwidth="0.50"];
	"cuIsPerfectNaive(Graph const&)" [color="#ff0200", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\ncuIsPerfectNaive(Graph const&)\n99.83%\n(0.00%)\n8×"];
	"cuIsPerfectNaive(Graph const&)" -> "cuContainsHoleOfSize2(Graph const&, int, mgpu::context_t&) [clone .constprop.111]" [arrowsize="0.99", color="#fd0d00", fontcolor="#fd0d00", fontsize="10.00", label="98.73%\n58×", labeldistance="3.95", penwidth="3.95"];
	"cuIsPerfectNaive(Graph const&)" -> cudaFuncGetAttributes [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.09%\n8×", labeldistance="0.50", penwidth="0.50"];
	"cuMemcpyHtoD_v2" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcuda.so.450.36.06\ncuMemcpyHtoD_v2\n0.94%\n(0.00%)\n1746×"];
	"cuMemcpyHtoD_v2" -> "0x000000000011b550" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.94%\n1746×", labeldistance="0.50", penwidth="0.50"];
	cudaFuncGetAttributes [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\ncudaFuncGetAttributes\n1.09%\n(0.00%)\n8×"];
	cudaFuncGetAttributes -> "0x0000000000019470" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.85%\n8×", labeldistance="0.50", penwidth="0.50"];
	cudaMemcpy [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="libcudart.so.10.1.243\ncudaMemcpy\n1.05%\n(0.00%)\n1804×"];
	cudaMemcpy -> "0x0000000000018900" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.04%\n1804×", labeldistance="0.50", penwidth="0.50"];
	"isAPath(Graph const&, vec<int> const&, bool, bool) [clone .part.186]" [color="#0d2f7d", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nisAPath(Graph const&, vec<int> const&, bool, bool) [clone .part.186]\n7.72%\n(7.72%)\n2023958×"];
	"isDistinctValues(vec<int> const&)" [color="#0ab50d", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nisDistinctValues(vec<int> const&)\n49.53%\n(49.53%)\n14959404×"];
	main [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nmain\n99.88%\n(0.00%)\n1×"];
	main -> "testWithStats(Graph const&, algos, bool (*)(Graph const&))" [arrowsize="1.00", color="#ff0200", fontcolor="#ff0200", fontsize="10.00", label="99.83%\n8×", labeldistance="3.99", penwidth="3.99"];
	"nextPathInPlace(Graph const&, vec<int>&, int, bool, bool)" [color="#fb1c01", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nnextPathInPlace(Graph const&, vec<int>&, int, bool, bool)\n97.23%\n(0.01%)\n5626×"];
	"nextPathInPlace(Graph const&, vec<int>&, int, bool, bool)" -> "nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" [arrowsize="0.99", color="#fb1c01", fontcolor="#fb1c01", fontsize="10.00", label="97.22%\n5626×", labeldistance="3.89", penwidth="3.89"];
	"nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" [color="#fb1c01", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nnextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)\n97.22%\n(33.00%)\n5626×"];
	"nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" -> "Graph::getNextNeighbour(int, int) const" [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="4.09%\n2906112×", labeldistance="0.50", penwidth="0.50"];
	"nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" -> "isAPath(Graph const&, vec<int> const&, bool, bool) [clone .part.186]" [arrowsize="0.35", color="#0d2f7d", fontcolor="#0d2f7d", fontsize="10.00", label="7.72%\n2023958×", labeldistance="0.50", penwidth="0.50"];
	"nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" -> "isDistinctValues(vec<int> const&)" [arrowsize="0.70", color="#0ab50d", fontcolor="#0ab50d", fontsize="10.00", label="49.53%\n14959404×", labeldistance="1.98", penwidth="1.98"];
	"nextPathInPlaceInternal(Graph const&, vec<int>&, int, bool, bool)" -> "void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)" [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.89%\n2908169×", labeldistance="0.50", penwidth="0.50"];
	"testWithStats(Graph const&, algos, bool (*)(Graph const&))" [color="#ff0200", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\ntestWithStats(Graph const&, algos, bool (*)(Graph const&))\n99.83%\n(0.00%)\n8×"];
	"testWithStats(Graph const&, algos, bool (*)(Graph const&))" -> "cuIsPerfectNaive(Graph const&)" [arrowsize="1.00", color="#ff0200", fontcolor="#ff0200", fontsize="10.00", label="99.83%\n8×", labeldistance="3.99", penwidth="3.99"];
	"void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)" [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="cuPerfect.e\nvoid std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)\n2.89%\n(2.89%)\n2908169×"];
}
